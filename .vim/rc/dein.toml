# Color: ---------------------------

# use some colorscheme
[[plugins]]
repo = 'flazz/vim-colorschemes'

[[plugins]]
repo = 'dzeban/vim-log-syntax'

# Shougo ---------------------------

[[plugins]]
repo = 'Shougo/dein.vim'

# vimrcで設定読まないと初期選択状態にならない
[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = "has('nvim')"
if = "!has('gui_running')"

# [[plugins]]
# repo = 'Shougo/neocomplete.vim'
# if = "has('lua')"
# hook_add = 'source ~/.vim/rc/plugins/neocomplete.rc.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = 'source ~/.vim/rc/plugins/denite.rc.vim'

# vimfier need
[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/vimfiler.vim'
hook_add = 'source ~/.vim/rc/plugins/vimfiler.rc.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

# need neosnippet
[[plugins]]
repo   = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/unite-outline'

# macvim slowly?
# [[plugins]]
# repo = 'Shougo/neomru.vim'
# if = "!has('gui_running')"

[[plugins]]
repo = 'Shougo/neoyank.vim'
if = "has('nvim')"

[[plugins]]
repo = 'nixprime/cpsm'
build = 'env PY3=ON ./install.sh'

# 重くなるかも?
# [[plugins]]
# repo = 'wesleyche/SrcExpl'
# hook_add = 'source ~/.vim/rc/plugins/srcexpl.rc.vim'

# Base Tools: ---------------------------

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'thinca/vim-splash'
hook_add = '''
    let g:splash#path = $HOME . '/.vim/rc/splash.txt'
'''

# dependency vim-watchdogs
[[plugins]]
repo = 'osyo-manga/shabadou.vim'

# camel need
[[plugins]]
repo = 'kana/vim-operator-user'

# vim-textobj-indent need
# map <Leader>I <plug>(textobj-indent-i)
[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-function'

# Need API
[[plugins]]
repo = 'mattn/webapi-vim'

# Library
[[plugins]]
repo = 'vim-jp/vital.vim'

[[plugins]]
repo = 'vim-scripts/TagHighlight'

# Convenience Tools: ---------------------------

# [[plugins]]
# repo = 'Siprah/vim-todoist'

# [[plugins]]
# repo = 'kien/rainbow_parentheses.vim'
# hook_add = 'source ~/.vim/rc/plugins/rainbow_parentheses.rc.vim'

[[plugins]]
repo = 'bkad/CamelCaseMotion'
hook_add = 'source ~/.vim/rc/plugins/CamelCaseMotion.rc.vim'

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = 'source ~/.vim/rc/plugins/tcomment.rc.vim'

# Need to `brew install global`
[[plugins]]
repo = 'zebult/auto-gtags.vim'
hook_add = 'source ~/.vim/rc/plugins/auto-gtags.rc.vim'

# Need to `brew install ctags`
[[plugins]]
repo = 'soramugi/auto-ctags.vim'
hook_add = 'source ~/.vim/rc/plugins/auto-ctags.rc.vim'

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = 'source ~/.vim/rc/plugins/easymotion.rc.vim'

[[plugins]]
repo = 'mrtazz/simplenote.vim'
hook_add = 'source ~/Dropbox/Saichi/Vim/Private/simplenote.rc.vim'

# メタ文字含むとlightline壊れるので注意
[[plugins]]
repo = 'zebult/toggl.vim'
hook_add = 'source ~/Dropbox/Saichi/Vim/Private/toggl.rc.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = 'source ~/.vim/rc/plugins/lightline.rc.vim'

# [[plugins]]
# repo = 'haya14busa/incsearch.vim'
# hook_add = '''
#     map /  <Plug>(incsearch-forward)
#     map ?  <Plug>(incsearch-backward)
#     map g/ <Plug>(incsearch-stay)
# '''

[[plugins]]
repo = 'mattn/googlesuggest-complete-vim'

[[plugins]]
repo = 'kana/vim-metarw'

[[plugins]]
repo = 'zebult/vim-metarw-redmine'
hook_add = 'source ~/Dropbox/Saichi/Vim/Private/vim-metarw-redmine.rc.vim'

[[plugins]]
repo = 'basyura/unite-yarm'
hook_add = '''
  let g:unite_yarm_server_url = ''
  let g:unite_yarm_access_key = ''
  let g:unite_yarm_limit = 100
  let g:unite_yarm_backup_dir = '/tmp/yarm'
'''

# ok~
# [[plugins]]
# repo = 'toritori0318/vim-redmine'
# hook_add = '''
#     let g:redmine_auth_site = ''
#     let g:redmine_auth_user = ''
#     let g:redmine_auth_pass = ''
#     let g:redmine_auth_key  = ''
# '''

[[plugins]]
repo = 'emonkak/vim-metarw-gist'
hook_add = 'source ~/Dropbox/Saichi/Vim/Private/vim-metarw-gist.rc.vim'

[[plugins]]
repo = 'joker1007/vim-metarw-qiita'
hook_add = '''
let g:qiita_user='zebult'
let g:qiita_token='xxxxxx'
'''

[[plugins]]
repo = 'mattn/vim-metarw-gdrive'

[[plugins]]
repo = 'mattn/vim-metarw-simplenote'

[[plugins]]
repo = 'simeji/vim-chatworker.git'
rev  = 'get-messages'
hook_add = '''
    " let g:chatwork_token = ''
    " nnoremap <Leader>c :Unite chatworker<CR>x
    " nnoremap <Leader>p :Unite chatwork_post_message<CR>x
'''

[[plugins]]
repo = 'thinca/vim-visualstar'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'kana/vim-smartchr'
hook_add = 'source ~/.vim/rc/plugins/smartchr.rc.vim'

# <C-x><C-u>
# [[plugins]]
# repo = 'junegunn/vim-emoji'
# hook_add = 'set completefunc=emoji#complete'

[[plugins]]
repo = 't9md/vim-quickhl'
hook_add = '''
    nmap <Space>m <Plug>(quickhl-manual-this)
    xmap <Space>m <Plug>(quickhl-manual-this)
    nmap <Space>M <Plug>(quickhl-manual-reset)
    xmap <Space>M <Plug>(quickhl-manual-reset)
'''

# >> can
[[plugins]]
repo = 'kana/vim-submode'
hook_add = 'source ~/.vim/rc/plugins/submode.rc.vim'

[[plugins]]
repo = 'jacquesbh/vim-showmarks'
hook_add = '''
    nnoremap mm :NoShowMarks!<CR>:DoShowMarks!<CR>
    " 最初からマークを表示する
    aug show-marks-sync
        au!
        au BufReadPost * sil! DoShowMarks
    aug END
'''

# i: ex(cii)
[[plugins]]
repo = 'kana/vim-textobj-indent'

# DEFAULT KEY MAPPINGS, ,w ex(ci,w)
# [[plugins]]
# repo = 'h1mesuke/textobj-wiw'

[[plugins]]
repo = 'tyru/operator-camelize.vim'
hook_add = '''
    let g:operator_camelize_all_uppercase_action = "lowercase"
    let g:operator_decamelize_all_uppercase_action = "lowercase"
    map C <plug>(operator-camelize-toggle)
'''

[[plugins]]
repo = 'kana/vim-operator-replace.git'
hook_add = '''
    map R <Plug>(operator-replace)
'''

# gitコマンド
[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = 'source ~/.vim/rc/plugins/fugitive.rc.vim'

[[plugins]]
repo = 'AndrewRadev/switch.vim'
hook_add = 'source ~/.vim/rc/plugins/switch.rc.vim'

# # GBrowse
# [[plugins]]
# repo = 'tpope/vim-rhubarb'
# hook_add = '''
#     let g:github_enterprise_urls = ['https://github.com/zebult']
# '''

[[plugins]]
repo = 'ruanyl/vim-gh-line'

# gitマーク, ハイライト
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = 'source ~/.vim/rc/plugins/gitgutter.rc.vim'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
    let g:indent_guides_enable_on_vim_startup=1
    let g:indent_guides_auto_colors=0
    autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=239
    autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=238
    let g:indent_guides_color_change_percent = 30
    let g:indent_guides_guide_size = 1
    let g:indent_guides_start_level = 1
'''

[[plugins]]
repo = 'rking/ag.vim'

[[plugins]]
repo = 'airblade/vim-rooter'
hook_add = '''
    let g:rooter_use_lcd = 1
    let g:rooter_patterns = ['.git', '.git/', 'tags', '_darcs/', '.hg/', '.bzr/', 'Makefile', 'GNUMakefile', 'GNUmakefile', '.svn/']
'''


# Swift ---------------------------

# syntax and indent and more
[[plugins]]
repo = 'keith/swift.vim'
on_ft = 'swift'

# syntax and indent
[[plugins]]
repo = 'toyamarinyon/vim-swift'
on_ft = 'swift'

# syntax
[[plugins]]
repo = 'kballard/vim-swift'
on_ft = 'swift'

# 辞書補完
[[plugins]]
repo = 'tokorom/swift-dict.vim'
on_ft = 'swift'

# C++ ---------------------------

# syntax
[[plugins]]
repo = 'vim-jp/cpp-vim'

# cocos2d-x syntax color
[[plugins]]
repo = 'Xuyuanp/vim-cc2dx'

# color
[[plugins]]
repo = 'octol/vim-cpp-enhanced-highlight'
on_ft = 'cpp'

# ouch objc
# [[plugins]]
# repo = 'zchee/deoplete-clang'
# on_ft = ['c', 'cpp', 'cmake']
# if = "has('nvim')"
# depends = ['deoplete.nvim']

# clang complete(need vimproc)
[[plugins]]
repo = 'osyo-manga/vim-marching'
filetypes  =  ['c', 'cpp', 'm', 'mm']
hook_add = '''
    " clang コマンドの設定
    let g:marching_clang_command = "/usr/bin/clang"
    " インクルードディレクトリのパスを設定
    let g:marching_include_paths = [
    \   $COCOS_ROOT,
    \   "/usr/local/Cellar/boost"
    \]" neocomplete.vim と併用して使用する場合は以下の設定を行う
    let g:marching_enable_neocomplete = 1
    let g:marching_enable_deoplete = 1
'''

# Vim ---------------------------

# complete
[[plugins]]
repo = 'Shougo/neco-vim'

# JavaScript ---------------------------

# color
[[plugins]]
repo = 'othree/yajs.vim'

# Java ---------------------------

# [[plugins]]
# repo = 'ervandew/eclim'
# filetypes  =  ['java']

# Android ---------------------------
[[plugins]]
repo = 'thinca/vim-logcat'

# [[plugins]]
# repo = 'naseer/logcat'
# [[plugins]]
# repo = 'vim-scripts/Logcat-syntax-highlighter'

# C# ---------------------------

# syntax
[[plugins]]
repo = 'OrangeT/vim-csharp'
on_ft = ['cs', 'csi', 'csx']


# Kotlin ---------------------------

[[plugins]]
repo = 'udalov/kotlin-vim'
on_ft = 'kotlin'

# Markdown ---------------------------

# syntax hilight
[[plugins]]
repo = 'gabrielelana/vim-markdown'
filetypes  =  ['md', 'mkd', 'markdown']
hook_add = '''
    let g:markdown_enable_folding = 0
    let g:markdown_enable_spell_checking = 0
'''

# foldmethod jis quickly
# [[plugins]]
# repo = 'nelstrom/vim-markdown-folding'
# filetypes  =  ['md', 'mkd', 'markdown']

# Toml ---------------------------

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

# Tex ---------------------------

# Vim上でtexの部分コンパイルをする
[[plugins]]
repo = 'lervag/vimtex'
on_ft = 'tex'
