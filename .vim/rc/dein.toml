# Color: ---------------------------

# use some colorscheme
[[plugins]]
repo = 'flazz/vim-colorschemes'

# Shougo ---------------------------

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'

[[plugins]]
repo = 'Shougo/neocomplete.vim'
if = "has('lua')"
hook_source = 'source ~/.vim/rc/plugins/neocomplete.rc.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_source = 'source ~/.vim/rc/plugins/denite.rc.vim'

[[plugins]]
repo = 'Shougo/vimfiler.vim'
on_source = ['deunite.vim']
hook_add = '''
    let g:vimfiler_as_default_explorer  = 1
    let g:vimfiler_safe_mode_by_default = 0
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo   = 'Shougo/neosnippet-snippets'


# Base Tools: ---------------------------

[[plugins]]
repo = 'thinca/vim-splash'
hook_add = '''
    let g:splash#path = $HOME . '/.vim/rc/splash.txt'
'''

[[plugins]]
repo = 'osyo-manga/shabadou.vim'
on_source = 'vim-quickrun.vim'

# camel need
[[plugins]]
repo = 'kana/vim-operator-user'

# vim-textobj-indent need
[[plugins]]
repo = 'kana/vim-textobj-user'
hook_add = '''
    map <Leader>I <plug>(textobj-indent-i)
    map I <plug>(textobj-indent-i)
'''

# Convenience Tools: ---------------------------

[[plugins]]
repo = 'jacquesbh/vim-showmarks'
hook_add = '''
    nnoremap mm :NoShowMarks!<CR>:DoShowMarks!<CR>
    " 最初からマークを表示する
    aug show-marks-sync
        au!
        au BufReadPost * sil! DoShowMarks
    aug END
'''

[[plugins]]
repo = 'kana/vim-textobj-indent'

[[plugins]]
repo = 'tyru/operator-camelize.vim'
hook_add = '''
    let g:operator_camelize_all_uppercase_action = "lowercase"
    let g:operator_decamelize_all_uppercase_action = "lowercase"
    map <Leader>C <plug>(operator-camelize-toggle)
    map C <plug>(operator-camelize-toggle)
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_source = 'source ~/.vim/rc/plugins/fugitive.rc.vim'

# syntax hilight, foldmethod
[[plugins]]
repo = 'plasticboy/vim-markdown'
hook_add = 'let g:vim_markdown_folding_disabled = 0'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
    let g:gitgutter_highlight_lines = 0
    nnoremap <Leader>s :GitGutterLineHighlightsToggle<CR>
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
    let g:indent_guides_enable_on_vim_startup=1
    let g:indent_guides_auto_colors=0
    autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=239
    autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=238
    let g:indent_guides_color_change_percent = 30
    let g:indent_guides_guide_size = 1
    let g:indent_guides_start_level = 1
'''

[[plugins]]
repo = 'rking/ag.vim'


# Swift ---------------------------

# syntax and indent and more
[[plugins]]
repo = 'keith/swift.vim'
on_ft = 'swift'

# syntax and indent
[[plugins]]
repo = 'toyamarinyon/vim-swift'
on_ft = 'swift'

# syntax
[[plugins]]
repo = 'kballard/vim-swift'
on_ft = 'swift'

# 辞書補完
[[plugins]]
repo = 'tokorom/swift-dict.vim'
on_ft = 'swift'


# C++ ---------------------------

# syntax
[[plugins]]
repo = 'vim-jp/cpp-vim'
on_ft = 'cpp'

# color
[[plugins]]
repo = 'octol/vim-cpp-enhanced-highlight'
on_ft = 'cpp'
 

# C# ---------------------------

# syntax
[[plugins]]
repo = 'OrangeT/vim-csharp'
on_ft = ['cs', 'csi', 'csx']


# Kotlin ---------------------------

[[plugins]]
repo = 'udalov/kotlin-vim'
on_ft = 'kotlin'


# Toml ---------------------------

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'


# Tex ---------------------------

# Vim上でtexの部分コンパイルをする
[[plugins]]
repo = 'lervag/vimtex'
on_ft = 'tex'


