" Settings
set ignorecase
set smartcase
set incsearch

set nobackup
set noswapfile
set nowritebackup
set noundofile

set relativenumber
set number

set vb t_vb=

augroup UtilitiesGroup
autocmd BufReadPost *
            \ if line("'\"") > 0 && line ("'\"") <= line("$") |
            \   exe "normal! g'\"" |
            \ endif
augroup END

" Mappings
let mapleader = "\<Space>"

nnoremap <silent> <ESC><ESC> :nohlsearch<CR>:args<CR>:redraw!<CR> 
inoremap jj <ESC><ESC><ESC>
noremap j gj
noremap k gk
noremap gj j
noremap gk k
noremap ;  :
noremap :  ;

nnoremap g0 ggVG
nnoremap gi miggVG='izz

nnoremap s <Nop>
nnoremap sj <C-w>j
nnoremap sk <C-w>k
nnoremap sl <C-w>l
nnoremap sh <C-w>h
nnoremap sJ <C-w>J
nnoremap sK <C-w>K
nnoremap sL <C-w>L
nnoremap sH <C-w>H
nnoremap sn gt
nnoremap sp gT
nnoremap sr <C-w>r
nnoremap s= <C-w>=
nnoremap g<C-]> :<C-u>vs<CR><C-w>l<C-]>
nnoremap t<C-]> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
nnoremap sw <C-w>w
nnoremap so <C-w>o
nnoremap sO <C-w>=
nnoremap sN :<C-u>bn<CR>
nnoremap sP :<C-u>bp<CR>
nnoremap st :<C-u>tabnew<CR>
nnoremap sT :<C-u>Unite tab<CR>
nnoremap ss :<C-u>sp new<CR><C-w>J
nnoremap sv :<C-u>vs new<CR><C-w>L
nnoremap sq :<C-u>q<CR>
nnoremap sQ :<C-u>bd<CR>
nnoremap sb :<C-u>Unite buffer_tab -buffer-name=file<CR>
nnoremap sB :<C-u>Unite buffer -buffer-name=file<CR>
nnoremap s% :%s ///g<Left><Left><Left><C-r><C-w><Right><C-r><C-w>
nnoremap S% :%s ///g<Left><Left><Left>\<<C-r><C-w>\><Right><C-r><C-w>

nnoremap <Leader>w :w<Cr>
nnoremap <Leader>q :q<Cr>
nnoremap <Leader>Q :qa<Cr>
nnoremap <Leader>2 :wq<Cr>
nnoremap <Leader>! :q!<Cr>

nnoremap <BS> %
vnoremap <BS> %

noremap ' `

vnoremap <silent> p "0p

" Ex
cnoremap <expr> / getcmdtype() == '/' ? '\/' : '/'
cnoremap <expr> ? getcmdtype() == '?' ? '\?' : '?'
cnoreabbrev wq!! w !sudo tee > /dev/null %<CR>:q!<CR>
cnoreabbrev w!! w !sudo tee > /dev/null %

" Color
colorscheme desert

" After
au FileType * setlocal formatoptions-=ro

